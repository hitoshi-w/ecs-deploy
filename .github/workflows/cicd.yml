name: Deploy Pipeline
on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-northeast-1
  ECR_REPOSITORY: watanabe
  ECS_CLUSTER: watanabe-cluster
  ECS_SERVICE: watanabe-service
  ECS_TASK_DEFINITION: .aws/task-definition.json

# AWS認証に必要
permissions:
  id-token: write # OIDCトークンを取得するために必要
  contents: read
  
jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run: 
        working-directory: .
    steps:
      - uses: actions/checkout@v4
      # TODO: Test

      - name: Build an Image
        run: docker image build -t temp_watanabe_image:latest .

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push the image to Amazon ECR
        env: 
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          docker image tag temp_watanabe_image:latest $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}
          docker image push $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }}
          echo $ECR_REGISTRY/$ECR_REPOSITORY:${{ github.sha }} > image-uri.txt

      - name: Upload the image uri file as an artifact
        uses: actions/upload-artifact@v4
        with:
          name: image-uri
          path: image-uri.txt

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - name: Download the artifact
        uses: actions/download-artifact@v4
        with:
          name: image-uri
          path: artifact

      - name: Define the image uri
        run: |
          echo "IMAGE_URI=$(cat artifact/image-uri.txt)" >> $GITHUB_ENV

      - name: Fill in the new image uri in the amazon ECS task definition
        id: render-task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ env.ECS_TASK_DEFINITION }}
          container-name: watanabe-container
          image: ${{ env.IMAGE_URI }}

      - name: Deploy ECS task
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.render-task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true

      

      